@model Subs.MimsWeb.Models.UserTemplate

@{
    ViewBag.Title = "Reset password";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ResetPasswordCapture</title>

    <style>

        label {
            display: inline-block;
            width: 200px;
            font-family: Arial;
        }

        .dataElem {
            margin: 0.5em 0.5em 0.5em 1em;
        }

            .dataElem input {
                width: 30em;
            }

            .dataElem select {
                width: 30em;
            }


        .myButtons button {
            margin: 1em 0em 0em 1em;
            display: inline;
            padding: 0px 7px 1px 7px;
            border-radius: 10px;
            text-decoration: none;
            text-shadow: none;
            font-family: Titillium, Arial, sans-serif;
            font-weight: 700;
            color: white;
            text-transform: capitalize;
            font-size: 0.8em;
            letter-spacing: .1em;
            background-color: dodgerblue;
        }

        .validation-summary-errors li {
            font-family: Arial;
            margin: 1em 0em 0em 1em;
            color: red;
        }
    </style>

</head>
<body>
    @Html.Partial("Heading")

    <div style="margin-top:2em;">

        @using (Html.BeginForm("ResetPasswordCapture", "Home", FormMethod.Post))
        {
            <p style="font-family: Arial; margin:2em 0em 1em 1em; color:red;">
                @Html.ViewBag.Message
            </p>

            <p>
                @Html.ValidationSummary()
            </p>

            <div class="dataElem">
                @Html.LabelFor(x => x.CustomerId)
                @Html.EditorFor(x => x.CustomerId)
            </div>

            <div class="dataElem">
                @Html.LabelFor(x => x.Password)
                @Html.EditorFor(x => x.Password)
            </div>

            <div class="dataElem">
                @Html.LabelFor(x => x.ConfirmedPassword)
                @Html.EditorFor(x => x.ConfirmedPassword)
            </div>


            <div class="myButtons">
                <button type="submit">Submit</button>
            </div>

        }
    </div>
</body>
</html>
